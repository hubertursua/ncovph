# Cases Query
type CasesQuery {
  # List of all confirmed cases
  confirmedCases(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String

    # Limit (1-500)
    limit: Int

    # Offset (>= 0)
    offset: Int
  ): [CaseInformation]

  # List of all admitted
  admitted(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String

    # Limit (1-500)
    limit: Int

    # Offset (>= 0)
    offset: Int
  ): [CaseInformation]


  # List of all recoveries
  recoveries(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String

    # Limit (1-500)
    limit: Int

    # Offset (>= 0)
    offset: Int
  ): [CaseInformation]

  # List of all deaths
  deaths(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String

    # Limit (1-500)
    limit: Int

    # Offset (>= 0)
    offset: Int
  ): [CaseInformation]

  # Get a case using its case number
  get(
    caseNumber: String
  ): CaseInformation

  # Total confirmed cases per day
  perDayConfirmed(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Total recoveries per day
  perDayRecoveries(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Total deaths per day
  perDayDeaths(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Cumulative count of confirmed cases per day
  cumulativeConfirmed(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Cumulative count of recoveries per day
  cumulativeRecoveries(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Cumulative count of deaths per day
  cumulativeDeaths(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DateValue]

  # Count of confirmed cases
  countConfirmedCases(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): Int

  # Count of currently admitted
  countAdmitted(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): Int

  # Count of recoveries
  countRecoveries(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): Int

  # Count of deaths
  countDeaths(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): Int

  # Count per sex
  countPerSex(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): CountPerSex

  # Distribution of sex per age group for confirmed cases
  distribAgeGroupSexConfirmedCases(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DistributionAgeGroupSex]

  # Distribution of sex per age group for admitted
  distribAgeGroupSexAdmitted(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DistributionAgeGroupSex]

  # Distribution of sex per age group for recoveries
  distribAgeGroupSexRecoveries(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DistributionAgeGroupSex]

  # Distribution of sex per age group for deaths
  distribAgeGroupSexDeaths(
    # Region
    region: String

    # Province (requires region to be also set)
    province: String

    # City (requires region & province to be also set)
    city: String
  ): [DistributionAgeGroupSex]
}